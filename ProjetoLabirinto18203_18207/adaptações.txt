/**
   Método criado para 
*/

public static void Movimentar() throws Exception
        {
            Fila<Coordenadas> fila = new Fila<Coordenadas>(3);
	    Coordenadas[] espacos = new Coordenada[4];
		
	    atualX = atual.getX();
	    atualY = atual.getY();
	
	    direcaoY(atual, espacos, atualX, atualY);
	    direcaoX(atual, espacos, atualX, atualY);
	    	    
            for(int i = 0; i < 3; i++)
		if(!espacos[i].equals(null))
		   fila.guarde(espacos[i]);
		
	    testaOutra(Coordenadas atual, Fila<Coordenadas> fila);
            
        }

private void direcaoY(Coordenadas[4] espacos, int atualX, int atualY)
,
{
	if(atualY + 1 < linhas)
            {
                if(labirinto[atualX][atualY + 1] == ' ')
                {
                    Coordenadas cord = new Coordenadas(atualX, atualY + 1);
		    espacos[0] = cord;
                }
            }

            if(atualY - 1 < -1)
            {
                if(labirinto[atualX][atualY - 1] == ' ')
                {
                	Coordenadas cord = new Coordenadas(atualX, atualY - 1);
			espacos[1] = cord;
			
                }
            }
	
}

private void direcaoX(Coordenadas[4] espacos, int atualX, int atualY)
{
	if(atual.getX() + 1 < colunas)
            {
                if(labirinto[atual.getX()+1][atual.getY()] == ' ')
                {
                    Coordenadas cord = new Coordenadas(atual.getX() + 1, atual.getY());
		    espacos[2] = cord;
                }
            }

            if(atual.getX() - 1 > -1)
            {
                if(labirinto[atual.getX()+1][atual.getY()] == ' ')
                {
                    Coordenadas cord = new Coordenadas(atual.getX() - 1, atual.getY());
		    espacos[3] = cord;
                }
            }
	
}

private void testaOutra(Coordenadas atual, Fila<Coordenadas> fila) // se nao tem nenhuma coord possivel, pega outra na possibilidades
{
	if(!fila.isVazia())
                {
                    atual = fila.getUmItem();
                    fila.jogueForaUmItem();

		    atualX = atual.getX();
		    atualY = atual.getY();

                    if(labirinto[atualX][atualY] != 'S')
                        labirinto[atualX][atualY] = '*';
                    else
                        terminou = true;

                    caminho.guarde(atual);

                    possibilidades.guarde(fila);
                }
            else
                {
                    if(!possibilidades.isVazia())
                    {
                    atual = caminho.getUmItem();
                    caminho.jogueForaUmItem();
                    labirinto[atual.getX()][atual.getY()] = ' ';
                    fila = possibilidades.getUmItem();
                    possibilidades.jogueForaUmItem();
                    }
                    else
                        throw new Exception("Labirinto sem resolução!");

                }
}